{"version":3,"sources":["components/Form.js","components/FilterButton.js","components/Todo.js","App.js","index.js"],"names":["Form","props","useState","name","setName","onSubmit","e","preventDefault","addTask","className","htmlFor","type","id","autoComplete","value","onChange","target","FilterButton","aria-pressed","isPressed","onClick","setFilter","Todo","isEditing","setEditing","newName","setNewName","wasEditing","ref","useRef","useEffect","current","usePrevious","editFieldRef","editButtonRef","editingTemplate","editTask","viewTemplate","defaultChecked","completed","toggleTaskCompleted","deleteTask","focus","setToLocal","tasksToSave","window","localStorage","clear","setItem","JSON","stringify","FILTER_MAP","All","Active","task","Completed","FILTER_NAMES","Object","keys","App","savedTasks","parse","getItem","length","tasks","setTasks","filter","updatedTasks","map","editedTaskList","remainingTasks","taskList","filterList","tasksNoun","headingText","listHeadingRef","prevTaskLength","newTask","nanoid","tabIndex","aria-labelledby","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8e5ca2be.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\nfunction Form(props) {\n  const [name, setName] = useState(\"\");\n\n  function handleChange(e) {\n    setName(e.target.value);\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    props.addTask(name);\n    setName(\"\");\n  }\n  \n  return (\n    <form onSubmit={handleSubmit}>\n      <h2 className=\"label-wrapper\">\n        <label htmlFor=\"new-todo-input\" className=\"label__lg\">\n          What needs to be done?\n        </label>\n      </h2>\n      <input\n        type=\"text\"\n        id=\"new-todo-input\"\n        className=\"input input__lg\"\n        name=\"text\"\n        autoComplete=\"off\"\n        value={name}\n        onChange={handleChange}\n      />\n      <button type=\"submit\" className=\"btn btn__primary btn__lg\">\n        Add\n      </button>\n    </form>\n  );\n}\n\nexport default Form;","import React from \"react\";\n\nfunction FilterButton(props) {\n  return (\n    <button\n      type=\"button\"\n      className=\"btn toggle-btn\"\n      aria-pressed={props.isPressed}\n      onClick={() => props.setFilter(props.name)}\n    >\n      <span className=\"visually-hidden\">Show </span>\n      <span>{props.name}</span>\n      <span className=\"visually-hidden\"> tasks</span>\n    </button>\n  );\n}\n\nexport default FilterButton;","import React, { useEffect, useRef, useState } from \"react\";\n\nexport default function Todo(props) {\n  const [isEditing, setEditing] = useState(false);\n  const [newName, setNewName] = useState('');\n\n  const wasEditing = usePrevious(isEditing);\n\n  const editFieldRef = useRef(null);\n  const editButtonRef = useRef(null);\n\n  function usePrevious(value) {\n    const ref = useRef();\n    useEffect(() => {\n      ref.current = value;\n    });\n    return ref.current;\n  }\n\n  function handleChange(e) {\n    setNewName(e.target.value);\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    props.editTask(props.id, newName);\n    setNewName(\"\");\n    setEditing(false);\n  }\n\n  const editingTemplate = (\n    <form className=\"stack-small\" onSubmit={handleSubmit}>\n      <div className=\"form-group\">\n        <label className=\"todo-label\" htmlFor={props.id}>\n          New name for {props.name}\n        </label>\n        <input\n          id={props.id}\n          className=\"todo-text\"\n          type=\"text\"\n          value={newName}\n          onChange={handleChange}\n          ref={editFieldRef}\n        />\n      </div>\n      <div className=\"btn-group\">\n        <button\n          type=\"button\"\n          className=\"btn todo-cancel\"\n          onClick={() => setEditing(false)}\n        >\n          Cancel\n  <span className=\"visually-hidden\">renaming {props.name}</span>\n        </button>\n        <button type=\"submit\" className=\"btn btn__primary todo-edit\">\n          Save\n          <span className=\"visually-hidden\">new name for {props.name}</span>\n        </button>\n      </div>\n    </form>\n  );\n\n  const viewTemplate = (\n    <div className=\"stack-small\">\n      <div className=\"c-cb\">\n        <input\n          id={props.id}\n          type=\"checkbox\"\n          defaultChecked={props.completed}\n          onChange={() => props.toggleTaskCompleted(props.id)}\n        />\n        <label className={`${props.completed ? \"strike\" : \"\"} todo-label `} htmlFor={props.id} >\n          {props.name}\n        </label>\n      </div>\n      <div className=\"btn-group\">\n        <button\n          type=\"button\"\n          className=\"btn\"\n          onClick={() => setEditing(true)}\n          ref={editButtonRef}\n        >\n          Edit <span className=\"visually-hidden\">{props.name}</span>\n        </button>\n        <button\n          type=\"button\"\n          className=\"btn btn__danger\"\n          onClick={() => props.deleteTask(props.id)}\n        >\n          Delete <span className=\"visually-hidden\">{props.name}</span>\n        </button>\n      </div>\n    </div>\n  );\n\n  useEffect(() => {\n    if (!wasEditing && isEditing) {\n      editFieldRef.current.focus();\n    }\n    if (wasEditing && !isEditing) {\n      editButtonRef.current.focus();\n    }\n  }, [wasEditing, isEditing]);\n\n  return <li className=\"todo\">{isEditing ? editingTemplate : viewTemplate}</li>;\n}\n","import React, { useState, useRef, useEffect } from \"react\";\nimport { nanoid } from \"nanoid\";\n\nimport Form from \"./components/Form\";\nimport FilterButton from \"./components/FilterButton\";\nimport Todo from \"./components/Todo\";\n\nfunction usePrevious(value) {\n  const ref = useRef();\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n}\n\nfunction setToLocal(tasksToSave) {\n  window.localStorage.clear();\n  window.localStorage.setItem(\"tasks\", ([JSON.stringify(tasksToSave)]));\n}\n\nconst FILTER_MAP = {\n  All: () => true,\n  Active: task => !task.completed,\n  Completed: task => task.completed\n};\n\nconst FILTER_NAMES = Object.keys(FILTER_MAP);\n\nfunction App(props) {\n  let savedTasks = JSON.parse(window.localStorage.getItem(\"tasks\"));\n\n  if (savedTasks == null || savedTasks.length === 0) {\n    savedTasks = props.tasks;\n  }\n\n  const [tasks, setTasks] = useState(savedTasks);\n  const [filter, setFilter] = useState('All');\n\n  function addTask(name) {\n    const newTask = { id: \"todo-\" + nanoid(), name: name, completed: false };\n    setTasks([...tasks, newTask]);\n    setToLocal([...tasks, newTask]);\n  }\n\n  function toggleTaskCompleted(id) {\n    const updatedTasks = tasks.map(task => {\n      // if this task has the same ID as the edited task\n      if (id === task.id) {\n        // use object spread to make a new object\n        // whose `completed` prop has been inverted\n        return { ...task, completed: !task.completed }\n      }\n      return task;\n    });\n    setTasks(updatedTasks);\n    setToLocal(updatedTasks);\n  }\n\n  function editTask(id, newName) {\n    const editedTaskList = tasks.map(task => {\n      // if this task has the same ID as the edited task\n      if (id === task.id) {\n        return { ...task, name: newName }\n      }\n      return task;\n    });\n    setTasks(editedTaskList);\n    setToLocal(editedTaskList);\n  }\n\n  function deleteTask(id) {\n    const remainingTasks = tasks.filter(task => id !== task.id);\n    setTasks(remainingTasks);\n    setToLocal(remainingTasks);\n  }\n\n  const taskList = tasks\n    .filter(FILTER_MAP[filter])\n    .map(task => (\n      \n      <Todo\n        id={task.id}\n        name={task.name}\n        completed={task.completed}\n        key={task.id}\n        toggleTaskCompleted={toggleTaskCompleted}\n        deleteTask={deleteTask}\n        editTask={editTask}\n      />\n    ));\n\n  const filterList = FILTER_NAMES.map(name => (\n    <FilterButton\n      key={name}\n      name={name}\n      isPressed={name === filter}\n      setFilter={setFilter}\n    />\n  ));\n\n  const tasksNoun = taskList.length !== 1 ? 'tasks' : 'task';\n  const headingText = `${taskList.length} ${tasksNoun} remaining`;\n\n  const listHeadingRef = useRef(null);\n  const prevTaskLength = usePrevious(tasks.length);\n\n  useEffect(() => {\n    if (tasks.length - prevTaskLength === -1) {\n      listHeadingRef.current.focus();\n    }\n  }, [tasks.length, prevTaskLength]);\n\n  window.localStorage.setItem(\"items\", ([JSON.stringify(tasks)]));\n\n  return (\n    <div className=\"todoapp stack-large\">\n      <h1>Todo</h1>\n      <Form addTask={addTask} />\n      <div className=\"filters btn-group stack-exception\">\n        {filterList}\n      </div>\n      <h2 id=\"list-heading\" tabIndex=\"-1\" ref={listHeadingRef}>\n        {headingText}\n      </h2>\n      <ul\n        // role=\"list\" // commented out for linter, used for accessibility\n        className=\"todo-list stack-large stack-exception\"\n        aria-labelledby=\"list-heading\"\n      >\n        {taskList}\n      </ul>\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n// default data\nconst DATA = [\n  { id: \"todo-0\", name: \"Add a Task\", completed: true },\n  { id: \"todo-1\", name: \"Remove a Task\", completed: false },\n  { id: \"todo-2\", name: \"Edit a Task\", completed: false },\n  { id: \"todo-3\", name: \"Refresh Page\", completed: false }\n];\n\nReactDOM.render(\n  <React.StrictMode>\n    <App tasks={DATA} />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}